<?xml version="1.0"?>
<document>
    <properties>
        <title>Composite Projects - Collaboration based Web Service Testing</title>
    </properties>
    <body>
		<section name="SoapUI Pro Composite Projects ">
		<p>What is a Composite Project?</p>
		<p>Behind the somewhat bewildering terminology lies a very simple concept; Composite Projects are soapUI projects saved to enable 
		Team Collaboration.</p>
		<p> Let's explain more in detail. Normally a soapUI Project is saved as one xml file. This has its advantages; you have only one file to consider and that file contains all information about that project. 
		It also has some disadvantages; collaboration and joint team test development is very hard because synchronization is very hard to do. 		
		</p>
		<p> 
		When working in a Team in a project you often come to the situation where you have one person updating one test and another person a second test. 
		If you only have one project file this is impossible to do simultaneously and hard to do by synching the test manually.</p>
		<p> 
           In comes Composite Projects; composite SoapUI projects are saved as a file system, which means updating, changing, or committing parts of
           projects, like a TestCase, are much easier to do.
        </p>
        

				<table class="relatedInfo" cellspacing="0" cellpadding="0">
	<tr class="a">
    	<td width="75" style="padding-top:5px">
        	<img src="../../images/where_do_i_start.jpg" alt="Start soapUI Testing" longdesc="http://www.soapui.org"></img>
        </td>
        <td>
            <table class="relatedInner">
              <tr>
                <td>
                	<span class="relatedInfoHeader">Did you know?</span>
                </td>
              </tr>
              <tr>
                <td>
                    <div>
						<p>
						There is a commercial version of soapUI available; <b><i>soapUI Pro</i></b>.
						</p>
						<p>
						<b><i>soapUI Pro</i></b> contains productivity enhancements as well as offers Professional World Class support.
						</p>
                    </div>
                </td>
              </tr>
              <tr align="right">
              	<td>
                	<span class="relatedLinks"><a href="http://www.eviware.com/component/option,com_wrapper/Itemid,41/" title="try soapUI Pro" onclick="javascript:urchinTracker:('/downloadTrial');">
                                               <img src="../images/try_pro_100.png" alt="Try soapUI pro to soap test" width="101" height="20" longdesc="http://www.eviware.com"/></a></span>
                </td>
              </tr>
            </table>
		</td>
	</tr>
</table>



        
        <subsection name="Composite File System">
        <p>A Composite SoapUI project is saved in directory with the project name. It contains separate directories for
           each Interface, TestSuite, MockService and File Settings.xml. File Settings is used for storing where settings and data for the project itself. 
           You can see it as the meta file. Each interface directory contains one file named interface settings.xml file and for each operation one xml
           file named by it. The TestSuite directory contains one settings.xml file and one xml file for each TestCase 
           named by it. Mock service directory contains one settings.xml and one xml file for each MockOperation
           named by it.
           <p align="center"><img src="images/composite-tree.gif" alt="Composite project view"/></p>
        </p>
        </subsection>
        <subsection name="Creating a Project Composite">
        <p>Creating a soapUI composite project is easy. In project properties you can find a property to set ;<b>Composite Project</b>
        that can be true or false. Setting it to true will make your soapUI Project save in composite form (projects
        that have set <b>Project Password</b> can not be composite).
        <p align="center"><img src="images/composite-properties.gif" alt="Composite project properties"/></p>
        </p>
        </subsection>
        <subsection name="Composite behavior and actions">
        <p>When renaming elements in a project, ie Interfaces, Operations/Resources, TestSuite, TestCase, and more,
            corresponding elements in the composite file system will be renamed if there is no file or directory with
            the same name, otherwise soapUI will show a warning message.
        Deleting element means removing them from the file system. Through the Projet-popup sub-menu <b>Composite Actions</b>, it is
        possible to save or reload elements.</p>

        </subsection>

            <subsection name="Import/Export of TestSuites and TestCases"><p>

                For both TestSuites and TestCases it is possible to export and import them from their containing items popup
                menus; specify a target/source folder as desired. Please note that these are not "compatible" or the same
                as TestSuites and TestCases in a composite project; this is merely an alternative way for non-Pro users to
                share Test items between projects/people.
        </p>
        </subsection>
		 <p><hr size="1"/>Next: <a href="resolving.html">Resolving Project Items</a></p>
		</section>
    </body>
</document>