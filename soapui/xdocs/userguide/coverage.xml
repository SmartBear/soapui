<?xml version="1.0"?>
<document>
    <properties>
        <title>WSDL Coverage for Web Service Tests</title>
    </properties>
    <body>
		<section name="SoapUI Pro Web Service Coverage">
		<p>soapUI Pro introduces the unique concept of Web Service Coverage, which dynamically allows you to analyze how
		much of a given SOAP or REST Web Service is being covered by your Functional Tests, MockServices, Mock Clients and SOAP Monitor clients
		and targets. This document aims at giving a brief overview of the concepts of Web Service Coverage, with links to the corresponding 
		documentation for each Coverage point in soapUI. The best way to learn is to play around with it!</p>
	    
			<table class="relatedInfo" cellspacing="0" cellpadding="0">
                <tr class="a">
                    <td width="75" style="padding-top:5px">
                        <img src="../images/where_do_i_start.jpg" alt="Start soapUI Testing"
                             longdesc="http://www.soapui.org"></img>
                    </td>
                    <td>
                        
                   <table class="relatedInner">
                            <tr>
                                <td>
                                    <span class="relatedInfoHeader">Did you know?</span>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div>
                                        <p>As the only test tool in the world, soapUI Pro shows you how much of your Web Services you have tested</p>
                                        <p>This will ensure your test quality. Try it out and see how fun it is.</p>
                                    </div>
                                </td>
                            </tr>
                            <tr align="right">
                                <td>
                                    <span class="relatedLinks">
                                        <a href="http://www.eviware.com/component/option,com_wrapper/Itemid,41/"
                                           title="try soapUI Pro"
                                           onclick="javascript:urchinTracker:('/downloadPro');">
                                            <img src="../images/try_pro_100.png" alt="Try soapUI pro to soap test"
                                                 width="101" height="20" longdesc="http://www.eviware.com"/>
                                        </a>
                                    </span>
                                </td>
                            </tr>
                        </table>
            </td></tr></table>

		
		<subsection name="Web Services Coverage">
		<p>Traditionally in environments such as Java or .Net , coverage is used to measure how much of the actual code base 
		that is being used during a given execution scenario (usually during Unit Tests). The returned value tries to give an
		estimate of how much of the code base that is actuality being used or tested.</p>
		<p>Web Services in soapUI are defined by a WSDL contract or REST model (with or without a WADL), which specifies the operations, 
		messages, faults, representations, etc... that make up the web services functionality. 
		For each message there is generally a finite amount of defined elements and attributes
		that can be used to convey the message content, divided among message bodies, headers and faults.</p>
		<p>The Web Service Coverage functionality analyzes each messages contract definition and then compares all corresponding messages
		during for example a TestRun to calculate how many of the defined elements or attributes that were actually used during 
		the tests. The result is in soapUI presented as both a percentage and a visualization of the actual message; 
		"Message Coverage"</p>
		<p>Further, when running functional tests, soapUI analyzes the performed XPath assertions, and will try to 
		calculate a corresponding value of how many of the defined elements or attributes that have actually been asserted. This
		result is added to the Message Coverage presentation and called "Assertion Coverage".</p>
		</subsection>

		<subsection name="Coverage Visualization">
		<p>In all situations where Coverage can be calculated in soapUI, a Coverage Panel is available with the following 
		basic layout:</p>
		<ul>
		<li>A toolbar at the top for enabling/clearing Coverage, setting Coverage Options and exporting a Coverage Report</li>
		<li>A Coverage TreeTable to the left containing the same items as the containing project together with calculated
		coverage percentage/color bar for the item.</li>
		<li>Two inspectors to the right containing either a Coverage Visualization for the selected operations request or response 
		("Message Coverage") or the actual Message Content for the selected request or response in the tree.</li>
		<li>Optional Inspectors at the bottom, depending on measurement point:
		<ul>
		<li>Run Log - Shows a log of the </li>
		<li>Assertion Results : available when running Test Coverage; contains a table of the performed XPath Assertions during
		the tests. Select a TestSuite, TestCase or TestStep to narrow down the assertions,
		or select an assertion in the table to navigate to that TestStep assertion in the tree.
		</li>
		
		</ul>
		</li>
		</ul>
		<p align="center"><img src="images/coverage_1.gif" alt="An example of WSDL Coverage"/></p>
		</subsection>
		
		<subsection name="The Coverage Tree">
		<p>The Coverage Tree displayed to the left is divided into 2 parts:</p>
		<ol>
		<li>The Interface Part displays the current projects REST Services and SOAP Interfaces with their respective children. 
		For each SOAP operation the defined Request and Response header/body/faults/attachments messages are shown. 
		The displayed Coverage values are aggregated  "upwards" in the tree, for example in the image above, the search Operations' Coverage is 8/9, which is the aggregate
		of the corresponding Request and Response message Coverage values. The values show that the Response Faults was not 
		covered during the Test Run (0/1).<br/>
		For each REST method the defined Parameters and Representation body messages are shown.</li>
		<li>The TestSuite part displays the current projects' TestSuites, TestCases and relevant TestSteps. Under each TestStep 
		that was the source of a Message Exchange during the Test Run, there will be Message nodes corresponding to the sent
		messages. Selecting a messages request or response node and then selecting the right Message Content inspector will 
		show the actual content of the message (see image below). Selecting the Message Coverage inspector will instead
		show that messages' coverage value.</li>
		</ol>
		<p align="center"><img src="images/coverage_2.gif" alt="Well testedness of a SOAP Message"/></p>
		<p>Double click an item in the tree will try to open that items corresponding editor/viewer</p>
		</subsection>
		
		<subsection name="Assertion Coverage">
		<p>As mentioned above, when running functional Tests, all performed XPath assertions are analyzed and a coverage
		value measuring how large part of the Web Service contract that was actually asserted. Assertion Coverage is displayed
		in dark-green in both the Coverage Tree and the Message Inspector. In the image below, the Message Coverage 
		Inspector shows that the item and contained values have been asserted by an XPath expression, the assertion can 
		also been seen in the Assertion Results Inspector at the bottom.</p>
		<p align="center"><img src="images/coverage_3.gif" alt="Assertion Coverage of a Web Service Response"/></p>

		</subsection>
		
		<subsection name="Coverage Options">
		<p>The Coverage Options dialog available from the toolbar allows you to set the following options:</p>
		<ul>
		<li><b>Count Empty Values</b> - select if empty elements and attributes should be regarded as covered</li>
		<li><b> ? Values</b> - select if elements and attributes containing '?' should be regarded as covered</li>
        <li><b>Excluded Elements</b> - a list of element names in the format <code>"{" + Namespace URI + "}" + local part</code> which
        should be excluded from coverage calculations.</li>
        <li><b>Multi Values</b> - a list of element names in the format <code>"{" + Namespace URI + "}" + local part=comma-seperated list of values</code>
            which will count coverage for the specified values. For example if you have a weekday element you could enter
            <code>{http://my.namespace}weekday=mon,tue,wed,thu,fri,sat,sun</code> and coverage will be calculated for the complete set of values.</li>
		</ul>
		
		<p align="center"><img src="images/coverage_options.gif" alt="Coverage Options in soapUI Pro"/></p>
		</subsection>

	    <subsection name="Coverage Measurement Points">
		<p>soapUI allows you to measure coverage in 3 distinct scenarios:</p>
		<ol>
		<li><b>For Functional Tests</b> - for measuring how much of your Web Service contract is actually covered by your tests. 
		The corresponding Coverage Panel is available at the <a href="projects/testsuites.html#Project_Coverage">Project</a>, 
		<a href="functional/testsuites.html#TestSuite_Coverage">TestSuite</a> and 
		<a href="functional/testcases.html#TestCase_Coverage">TestCase</a> level.</li>
		<li><b>For <a href="mock/coverage.html">MockServices</a> </b>- for measuring both how much of your WSDL is being mocked 
		and how much of your WSDL is being utilized/sent by the Mocks clients.</li>
		<li><b>For <a href="monitor/coverage.html">SOAP Monitors</a></b> - for measuring how much of your WSDL is being used in 
		a real life scenario.</li>
		</ol>
		</subsection>

		 <p><hr size="1"/>Next: <a href="standards.html">Standards and specifications supported by soapUI</a></p>
		</section>
    </body>
</document>
