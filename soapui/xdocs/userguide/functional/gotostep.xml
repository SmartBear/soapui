<?xml version="1.0"?>
<document>
    <properties>
        <title>SOAP Testing Tool soapUI - conditional goto steps</title>
    </properties>
    <body>
		<section name="SoapUI Conditional Gotos">
		   <p>Conditional Goto steps evaluate an arbitrary number of XPath conditions
		   on the previous requests response message and transfer TestCase execution to the TestStep associated with
		   the first condition that evaluates to true. This allows for conditional TestCase execution paths, where the 
		   result of some request controls how to move on in the TestCase. If no condition matches the current response, 
		   TestCase execution continues after the Goto Step as normal.</p>
		   <p>Sample scenarios could be:</p>
		   <ul>
		   <li>Branching depending on results returned by a request</li>
		   <li>Restarting after a "longer" delay (minutes) for surveillance testing</li>
		   <li>Repeatedly waiting and checking for a status value before moving on (for example on a batch-process)</li>
		   </ul>
		
		 <p>Conditions use the same Saxon XPath engine as described for the XPath Assertion, remember that a condition
		 <i>must</i> evaluate to a Boolean value to be valid (see <a href="#Goto_Condition_Examples">Goto examples below</a>) </p>
		 
		 <subsection name="The soapUI Conditional Goto Editor">
		 <p>The ConditionalGoto Editor is opened by double clicking a ConditionalGoto test step either in the 
		 navigator or in the TestCase Editors' test step list.</p>
		 <p>The editor contains a list of configured conditions to the left, selecting an existing condition in the 
		 list will display that condition's expression and a target TestStep ComboBox to the right. The <b>Test Condition</b> 
		 button will evaluate the current condition against the current response and display the result 
		 (a response message must be available for the preceding TestRequest).</p>
		 <p>soapUI Pro adds an <a href="../xpath_selector.html">XPath Selector</a> button to the right
		 of the Test Condition button for easily selecting the XPath that should be used for evaluation.</p>
		 
		 <p align="center"><img src="images/gotostep_editor.gif" alt="SoapUI Conditional Goto Editor"/></p>
		
		 <p>The following actions are available from the bottom toolbar</p>
		 <ul>
		 	<li><b>Add</b> : prompts to add a new condition to the list</li>
		 	<li><b>Copy</b> : prompts to create a copy of the selected condition</li>
		 	<li><b>Delete</b> : prompts to delete the selected condition</li>
		 	<li><b>Rename</b> : prompts to rename the selected condition</li>
		 	<li><b>Run</b> : runs the conditions and displays which condition that matched the current response 
		 	(a response message	must be available for the preceding TestRequest)</li>
		 	<li><b>Declare</b> : declares namespaces in the selected conditions expression field. Namespaces are 
		 	extracted from the preceding TestRequests current response message (if available).</li>
		 	 <li><b>Online Help</b> - Displays this page in an external browser</li>
		 </ul>
		 
		 </subsection>
		 
		 <subsection name="Goto Condition Examples">
		 <p>Conditions must evaluate to a Boolean value, for example the following expression checks that there are hits
		 in the search result returned from the Amazon web service:</p>
		 <source>declare namespace SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace ns1='http://webservices.amazon.com/AWSECommerceService/2005-10-05';
declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
count(//ns1:Item)>0</source>
		 <p>A generic condition that checks for a soap body would be:</p>
		 <source>declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
count(//SOAP-ENV:Body)=1</source>
		 <p>and the corresponding check for a soap fault would be:</p>
		 <source>declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
count(//SOAP-ENV:Fault)=1</source>
		 </subsection>
		
		 <p><hr size="1"/>Next: <a href="groovystep.html">Web Service Test Scripts - Groovy Script Steps</a></p>
		</section>
    </body>
</document>